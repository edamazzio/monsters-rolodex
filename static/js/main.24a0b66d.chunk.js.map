{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","changeHandler","type","onChange","App","onSearchChangeHandler","evt","setState","searchField","target","value","state","fetch","then","res","json","console","log","catch","e","error","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAQ,SAACC,GAAD,OACjB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,yBACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAMN,EAAMI,QAAQG,MAApB,WCHKC,G,MAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,cAAhB,OACrB,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCHG,E,kDAtCX,aAAe,IAAD,8BACV,gBAgBJC,sBAAwB,SAAAC,GACpB,EAAKC,SAAS,CAACC,YAAaF,EAAIG,OAAOC,SAhBvC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJP,E,qDAQd,WAAsB,IAAD,OACjBI,MAZU,8CAaLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhB,GACFmB,QAAQC,IAAR,oBAAyBpB,IACzB,EAAKU,SAAS,CAACV,gBAChBqB,OAAO,SAAAC,GAAC,OAAGH,QAAQI,MAAMD,Q,oBAQpC,WACI,MAAkCE,KAAKV,MAA/Bd,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZc,EAAmBzB,EAAS0B,QAAO,SAAA/B,GAAO,OAAIA,EAAQE,KAAK8B,cAAcC,SAASjB,EAAYgB,kBACpG,OACI,sBAAKnC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,gBACZC,cAAeoB,KAAKhB,wBAExB,cAAC,EAAD,CAAUR,SAAWyB,W,GAjCnBI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.24a0b66d.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card  = (props) => (\n    <div className='card-container'>\n        <img alt='monster' src={ `https://robohash.org/${props.monster.id}?set=2&size=320x320` }></img>\n        <h2> { props.monster.name } </h2>\n        <p> { props.monster.email } </p>\n    </div>\n)\n","import React from 'react';\nimport { Card } from \"../card/card.component\";\nimport './card-list.styles.css'\n\nexport const CardList = (props) => (\n    <div className='card-list'>\n        {props.monsters.map(monster =>(\n            <Card key={monster.id} monster={monster}/>\n        ))}\n    </div>\n)\n","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, changeHandler }) => (\n    <input\n        className='search'\n        type='search'\n        placeholder={placeholder}\n        onChange={changeHandler}\n    />\n)\n","import './App.css';\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nconst USERS_URL = \"https://jsonplaceholder.typicode.com/users\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount () {\n        fetch(USERS_URL)\n            .then(res => res.json())\n            .then(monsters => {\n                console.log(`monsters: ${monsters}`);\n                this.setState({monsters})\n            }).catch( e=> console.error(e));\n    }\n\n    onSearchChangeHandler = evt => {\n        this.setState({searchField: evt.target.value})\n    }\n\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder='searchmonster'\n                    changeHandler={this.onSearchChangeHandler}\n                />\n                <CardList monsters={ filteredMonsters }/>\n            </div>\n        );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}